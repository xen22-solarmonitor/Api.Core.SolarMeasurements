// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Api.Core.SolarMeasurementsProxy.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class CurrentVoltageSensorMeasurement
    {
        /// <summary>
        /// Initializes a new instance of the CurrentVoltageSensorMeasurement
        /// class.
        /// </summary>
        public CurrentVoltageSensorMeasurement()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the CurrentVoltageSensorMeasurement
        /// class.
        /// </summary>
        public CurrentVoltageSensorMeasurement(double? voltageV = default(double?), double? currentA = default(double?), System.DateTime? timestamp = default(System.DateTime?), string name = default(string), string location = default(string), string sensorType = default(string))
        {
            VoltageV = voltageV;
            CurrentA = currentA;
            Timestamp = timestamp;
            Name = name;
            Location = location;
            SensorType = sensorType;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "voltageV")]
        public double? VoltageV { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "currentA")]
        public double? CurrentA { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "timestamp")]
        public System.DateTime? Timestamp { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "location")]
        public string Location { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "sensorType")]
        public string SensorType { get; set; }

    }
}
